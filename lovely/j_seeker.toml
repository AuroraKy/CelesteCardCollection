[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# If card not most common suit or rank shuffle back into deck (not on top spot)
[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "local card = area:remove_card(nil, discarded_only)"
position = "at"
payload = '''
local top_card = nil
if G.GAME.pool_flags.seeker_table and self == G.hand and area == G.deck and not discarded_only then
	top_card = G.deck.cards[#G.deck.cards]
	if top_card.base.value ~= G.GAME.pool_flags.seeker_table.rank and top_card.base.suit ~= G.GAME.pool_flags.seeker_table.suit then
		table.remove(G.deck.cards, #G.deck.cards)
		table.insert(G.deck.cards, pseudorandom("seeker", 1, math.max(#G.deck.cards-1, 1)), top_card)
		local no_card = top_card
		card_eval_status_text(G.GAME.pool_flags.seeker_table.ref, 'extra', nil, nil, nil, {
						message = string.format("Redraw %s of %s", no_card.base.value, no_card.base.suit),
						colour = G.C.Blue
					})
		
		top_card = nil
	end 
end
local card = area:remove_card(top_card, discarded_only)
'''
match_indent = true
