[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# do not
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.FUNCS.draw_from_hand_to_discard()"
position = "after"
payload = '''
if not (G.GAME.ccc_golden_progress and G.GAME.ccc_golden_progress > 1) then
'''
match_indent = true

# end wrap
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
            end
        return true
      end
    }))
  end
  
function new_round()
'''
position = "before"
payload = '''
else
	G.FUNCS.draw_from_discard_to_deck()
	delay(0.8)
	local function _reset()
		G.GAME.chips = 0
		G.GAME.current_round.discards_left = math.max(0, G.GAME.round_resets.discards + G.GAME.round_bonus.discards)
		G.GAME.current_round.hands_left = (math.max(1, G.GAME.round_resets.hands + G.GAME.round_bonus.next_hands))
		G.GAME.current_round.hands_played = 0
		G.GAME.current_round.discards_used = 0
		G.GAME.ccc_golden_progress = G.GAME.ccc_golden_progress - 1
		G.GAME.blind:set_text()
	end
	G.E_MANAGER:add_event(Event({
		trigger = 'immediate',
		func = function()
			SMODS.juice_up_blind()
			G.E_MANAGER:add_event(Event({trigger = 'after', delay = 0.06*G.SETTINGS.GAMESPEED, blockable = false, blocking = false, func = function()
				play_sound('tarot2', 0.76, 0.4);_reset();return true end}))
			play_sound('tarot2', 1, 0.4)
			return true
		end
	}))
	delay(0.8)
	G.GAME.blind:alert_debuff(true)
	SMODS.calculate_context({setting_blind = true, blind = G.GAME.round_resets.blind})
	
	-- TARGET: setting_blind effects
	delay(0.4)
	G.E_MANAGER:add_event(Event({
		trigger = 'immediate',
		func = function()
			G.STATE = G.STATES.DRAW_TO_HAND
			G.deck:shuffle('nr'..G.GAME.round_resets.ante)
			G.deck:hard_set_T()
			G.STATE_COMPLETE = false
			return true
		end
	}))
end
'''
match_indent = true

# end wrap
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''
if game_over then
'''
position = "before"
payload = '''
if (G.GAME.ccc_golden_progress and G.GAME.ccc_golden_progress > 1) then
	game_won = false
	G.GAME.won = false
end
'''
match_indent = true